{"version":3,"file":"admin-B662x858.js","sources":["../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js","../node_modules/@firebase/installations/dist/esm/index.esm2017.js","../node_modules/@firebase/analytics/dist/esm/index.esm2017.js","../src/config/firebase.ts","../src/services/articleService.ts","../src/services/categoryService.ts","../src/components/admin/CategoryManager.tsx","../src/services/commentService.ts","../src/components/admin/CommentModeration.tsx","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.js","../node_modules/react-chartjs-2/dist/index.js","../src/services/statsService.ts","../src/components/admin/StatsDashboard.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\nconst name = \"@firebase/installations\";\nconst version = \"0.6.12\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst PENDING_TIMEOUT_MS = 10000;\nconst PACKAGE_VERSION = `w:${version}`;\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nconst SERVICE = 'installations';\nconst SERVICE_NAME = 'Installations';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERROR_DESCRIPTION_MAP = {\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n    [\"not-registered\" /* ErrorCode.NOT_REGISTERED */]: 'Firebase Installation is not registered.',\n    [\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\n    [\"request-failed\" /* ErrorCode.REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n    [\"app-offline\" /* ErrorCode.APP_OFFLINE */]: 'Could not process request. Application offline.',\n    [\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n    return (error instanceof FirebaseError &&\n        error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */));\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getInstallationsEndpoint({ projectId }) {\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n    return {\n        token: response.token,\n        requestStatus: 2 /* RequestStatus.COMPLETED */,\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n        creationTime: Date.now()\n    };\n}\nasync function getErrorFromResponse(requestName, response) {\n    const responseJson = await response.json();\n    const errorData = responseJson.error;\n    return ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\n        requestName,\n        serverCode: errorData.code,\n        serverMessage: errorData.message,\n        serverStatus: errorData.status\n    });\n}\nfunction getHeaders({ apiKey }) {\n    return new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'x-goog-api-key': apiKey\n    });\n}\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\n    const headers = getHeaders(appConfig);\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\n    return headers;\n}\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nasync function retryIfServerError(fn) {\n    const result = await fn();\n    if (result.status >= 500 && result.status < 600) {\n        // Internal Server Error. Retry request.\n        return fn();\n    }\n    return result;\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n    // This works because the server will never respond with fractions of a second.\n    return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function createInstallationRequest({ appConfig, heartbeatServiceProvider }, { fid }) {\n    const endpoint = getInstallationsEndpoint(appConfig);\n    const headers = getHeaders(appConfig);\n    // If heartbeat service exists, add the heartbeat string to the header.\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\n        optional: true\n    });\n    if (heartbeatService) {\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n        }\n    }\n    const body = {\n        fid,\n        authVersion: INTERNAL_AUTH_VERSION,\n        appId: appConfig.appId,\n        sdkVersion: PACKAGE_VERSION\n    };\n    const request = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (response.ok) {\n        const responseValue = await response.json();\n        const registeredInstallationEntry = {\n            fid: responseValue.fid || fid,\n            registrationStatus: 2 /* RequestStatus.COMPLETED */,\n            refreshToken: responseValue.refreshToken,\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n        };\n        return registeredInstallationEntry;\n    }\n    else {\n        throw await getErrorFromResponse('Create Installation', response);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction bufferToBase64UrlSafe(array) {\n    const b64 = btoa(String.fromCharCode(...array));\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nconst INVALID_FID = '';\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nfunction generateFid() {\n    try {\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n        // bytes. our implementation generates a 17 byte array instead.\n        const fidByteArray = new Uint8Array(17);\n        const crypto = self.crypto || self.msCrypto;\n        crypto.getRandomValues(fidByteArray);\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n        const fid = encode(fidByteArray);\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n    }\n    catch (_a) {\n        // FID generation errored\n        return INVALID_FID;\n    }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\n    // Remove the 23rd character that was added because of the extra 4 bits at the\n    // end of our 17 byte array, and the '=' padding.\n    return b64String.substr(0, 22);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a string key that can be used to identify the app. */\nfunction getKey(appConfig) {\n    return `${appConfig.appName}!${appConfig.appId}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst fidChangeCallbacks = new Map();\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nfunction fidChanged(appConfig, fid) {\n    const key = getKey(appConfig);\n    callFidChangeCallbacks(key, fid);\n    broadcastFidChange(key, fid);\n}\nfunction addCallback(appConfig, callback) {\n    // Open the broadcast channel if it's not already open,\n    // to be able to listen to change events from other tabs.\n    getBroadcastChannel();\n    const key = getKey(appConfig);\n    let callbackSet = fidChangeCallbacks.get(key);\n    if (!callbackSet) {\n        callbackSet = new Set();\n        fidChangeCallbacks.set(key, callbackSet);\n    }\n    callbackSet.add(callback);\n}\nfunction removeCallback(appConfig, callback) {\n    const key = getKey(appConfig);\n    const callbackSet = fidChangeCallbacks.get(key);\n    if (!callbackSet) {\n        return;\n    }\n    callbackSet.delete(callback);\n    if (callbackSet.size === 0) {\n        fidChangeCallbacks.delete(key);\n    }\n    // Close broadcast channel if there are no more callbacks.\n    closeBroadcastChannel();\n}\nfunction callFidChangeCallbacks(key, fid) {\n    const callbacks = fidChangeCallbacks.get(key);\n    if (!callbacks) {\n        return;\n    }\n    for (const callback of callbacks) {\n        callback(fid);\n    }\n}\nfunction broadcastFidChange(key, fid) {\n    const channel = getBroadcastChannel();\n    if (channel) {\n        channel.postMessage({ key, fid });\n    }\n    closeBroadcastChannel();\n}\nlet broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel() {\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n        broadcastChannel.onmessage = e => {\n            callFidChangeCallbacks(e.data.key, e.data.fid);\n        };\n    }\n    return broadcastChannel;\n}\nfunction closeBroadcastChannel() {\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n        broadcastChannel.close();\n        broadcastChannel = null;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n    if (!dbPromise) {\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n            upgrade: (db, oldVersion) => {\n                // We don't use 'break' in this switch statement, the fall-through\n                // behavior is what we want, because if there are multiple versions between\n                // the old version and the current version, we want ALL the migrations\n                // that correspond to those versions to run, not only the last one.\n                // eslint-disable-next-line default-case\n                switch (oldVersion) {\n                    case 0:\n                        db.createObjectStore(OBJECT_STORE_NAME);\n                }\n            }\n        });\n    }\n    return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function set(appConfig, value) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n    const oldValue = (await objectStore.get(key));\n    await objectStore.put(value, key);\n    await tx.done;\n    if (!oldValue || oldValue.fid !== value.fid) {\n        fidChanged(appConfig, value.fid);\n    }\n    return value;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function remove(appConfig) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n    await tx.done;\n}\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nasync function update(appConfig, updateFn) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    const store = tx.objectStore(OBJECT_STORE_NAME);\n    const oldValue = (await store.get(key));\n    const newValue = updateFn(oldValue);\n    if (newValue === undefined) {\n        await store.delete(key);\n    }\n    else {\n        await store.put(newValue, key);\n    }\n    await tx.done;\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n        fidChanged(appConfig, newValue.fid);\n    }\n    return newValue;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nasync function getInstallationEntry(installations) {\n    let registrationPromise;\n    const installationEntry = await update(installations.appConfig, oldEntry => {\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n        const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\n        registrationPromise = entryWithPromise.registrationPromise;\n        return entryWithPromise.installationEntry;\n    });\n    if (installationEntry.fid === INVALID_FID) {\n        // FID generation failed. Waiting for the FID from the server.\n        return { installationEntry: await registrationPromise };\n    }\n    return {\n        installationEntry,\n        registrationPromise\n    };\n}\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(oldEntry) {\n    const entry = oldEntry || {\n        fid: generateFid(),\n        registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n    };\n    return clearTimedOutRequest(entry);\n}\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\n    if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        if (!navigator.onLine) {\n            // Registration required but app is offline.\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\n            return {\n                installationEntry,\n                registrationPromise: registrationPromiseWithError\n            };\n        }\n        // Try registering. Change status to IN_PROGRESS.\n        const inProgressEntry = {\n            fid: installationEntry.fid,\n            registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\n            registrationTime: Date.now()\n        };\n        const registrationPromise = registerInstallation(installations, inProgressEntry);\n        return { installationEntry: inProgressEntry, registrationPromise };\n    }\n    else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        return {\n            installationEntry,\n            registrationPromise: waitUntilFidRegistration(installations)\n        };\n    }\n    else {\n        return { installationEntry };\n    }\n}\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(installations, installationEntry) {\n    try {\n        const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\n        return set(installations.appConfig, registeredInstallationEntry);\n    }\n    catch (e) {\n        if (isServerError(e) && e.customData.serverCode === 409) {\n            // Server returned a \"FID cannot be used\" error.\n            // Generate a new ID next time.\n            await remove(installations.appConfig);\n        }\n        else {\n            // Registration failed. Set FID as not registered.\n            await set(installations.appConfig, {\n                fid: installationEntry.fid,\n                registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n            });\n        }\n        throw e;\n    }\n}\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(installations) {\n    // Unfortunately, there is no way of reliably observing when a value in\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n    // so we need to poll.\n    let entry = await updateInstallationRequest(installations.appConfig);\n    while (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        // createInstallation request still in progress.\n        await sleep(100);\n        entry = await updateInstallationRequest(installations.appConfig);\n    }\n    if (entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        // The request timed out or failed in a different call. Try again.\n        const { installationEntry, registrationPromise } = await getInstallationEntry(installations);\n        if (registrationPromise) {\n            return registrationPromise;\n        }\n        else {\n            // if there is no registrationPromise, entry is registered.\n            return installationEntry;\n        }\n    }\n    return entry;\n}\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(appConfig) {\n    return update(appConfig, oldEntry => {\n        if (!oldEntry) {\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\n        }\n        return clearTimedOutRequest(oldEntry);\n    });\n}\nfunction clearTimedOutRequest(entry) {\n    if (hasInstallationRequestTimedOut(entry)) {\n        return {\n            fid: entry.fid,\n            registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n        };\n    }\n    return entry;\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n    return (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateAuthTokenRequest({ appConfig, heartbeatServiceProvider }, installationEntry) {\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\n    // If heartbeat service exists, add the heartbeat string to the header.\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\n        optional: true\n    });\n    if (heartbeatService) {\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n        }\n    }\n    const body = {\n        installation: {\n            sdkVersion: PACKAGE_VERSION,\n            appId: appConfig.appId\n        }\n    };\n    const request = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (response.ok) {\n        const responseValue = await response.json();\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n        return completedAuthToken;\n    }\n    else {\n        throw await getErrorFromResponse('Generate Auth Token', response);\n    }\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nasync function refreshAuthToken(installations, forceRefresh = false) {\n    let tokenPromise;\n    const entry = await update(installations.appConfig, oldEntry => {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n        }\n        const oldAuthToken = oldEntry.authToken;\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n            // There is a valid token in the DB.\n            return oldEntry;\n        }\n        else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n            // There already is a token request in progress.\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n            return oldEntry;\n        }\n        else {\n            // No token or token expired.\n            if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n            }\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n            return inProgressEntry;\n        }\n    });\n    const authToken = tokenPromise\n        ? await tokenPromise\n        : entry.authToken;\n    return authToken;\n}\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\n    // Unfortunately, there is no way of reliably observing when a value in\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n    // so we need to poll.\n    let entry = await updateAuthTokenRequest(installations.appConfig);\n    while (entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        // generateAuthToken still in progress.\n        await sleep(100);\n        entry = await updateAuthTokenRequest(installations.appConfig);\n    }\n    const authToken = entry.authToken;\n    if (authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        // The request timed out or failed in a different call. Try again.\n        return refreshAuthToken(installations, forceRefresh);\n    }\n    else {\n        return authToken;\n    }\n}\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(appConfig) {\n    return update(appConfig, oldEntry => {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n        }\n        const oldAuthToken = oldEntry.authToken;\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\n        }\n        return oldEntry;\n    });\n}\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\n    try {\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\n        await set(installations.appConfig, updatedInstallationEntry);\n        return authToken;\n    }\n    catch (e) {\n        if (isServerError(e) &&\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n            // Generate a new ID next time.\n            await remove(installations.appConfig);\n        }\n        else {\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\n            await set(installations.appConfig, updatedInstallationEntry);\n        }\n        throw e;\n    }\n}\nfunction isEntryRegistered(installationEntry) {\n    return (installationEntry !== undefined &&\n        installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */);\n}\nfunction isAuthTokenValid(authToken) {\n    return (authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ &&\n        !isAuthTokenExpired(authToken));\n}\nfunction isAuthTokenExpired(authToken) {\n    const now = Date.now();\n    return (now < authToken.creationTime ||\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n    const inProgressAuthToken = {\n        requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\n        requestTime: Date.now()\n    };\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n    return (authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nasync function getId(installations) {\n    const installationsImpl = installations;\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl);\n    if (registrationPromise) {\n        registrationPromise.catch(console.error);\n    }\n    else {\n        // If the installation is already registered, update the authentication\n        // token if needed.\n        refreshAuthToken(installationsImpl).catch(console.error);\n    }\n    return installationEntry.fid;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nasync function getToken(installations, forceRefresh = false) {\n    const installationsImpl = installations;\n    await completeInstallationRegistration(installationsImpl);\n    // At this point we either have a Registered Installation in the DB, or we've\n    // already thrown an error.\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n    return authToken.token;\n}\nasync function completeInstallationRegistration(installations) {\n    const { registrationPromise } = await getInstallationEntry(installations);\n    if (registrationPromise) {\n        // A createInstallation request is in progress. Wait until it finishes.\n        await registrationPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function deleteInstallationRequest(appConfig, installationEntry) {\n    const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\n    const request = {\n        method: 'DELETE',\n        headers\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (!response.ok) {\n        throw await getErrorFromResponse('Delete Installation', response);\n    }\n}\nfunction getDeleteEndpoint(appConfig, { fid }) {\n    return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Deletes the Firebase Installation and all associated data.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nasync function deleteInstallations(installations) {\n    const { appConfig } = installations;\n    const entry = await update(appConfig, oldEntry => {\n        if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n            // Delete the unregistered entry without sending a deleteInstallation request.\n            return undefined;\n        }\n        return oldEntry;\n    });\n    if (entry) {\n        if (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n            // Can't delete while trying to register.\n            throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\n        }\n        else if (entry.registrationStatus === 2 /* RequestStatus.COMPLETED */) {\n            if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n            }\n            else {\n                await deleteInstallationRequest(appConfig, entry);\n                await remove(appConfig);\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n * @param installations - The `Installations` instance.\n * @param callback - The callback function that is invoked when FID changes.\n * @returns A function that can be called to unsubscribe.\n *\n * @public\n */\nfunction onIdChange(installations, callback) {\n    const { appConfig } = installations;\n    addCallback(appConfig, callback);\n    return () => {\n        removeCallback(appConfig, callback);\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an instance of {@link Installations} associated with the given\n * {@link @firebase/app#FirebaseApp} instance.\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\n *\n * @public\n */\nfunction getInstallations(app = getApp()) {\n    const installationsImpl = _getProvider(app, 'installations').getImmediate();\n    return installationsImpl;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction extractAppConfig(app) {\n    if (!app || !app.options) {\n        throw getMissingValueError('App Configuration');\n    }\n    if (!app.name) {\n        throw getMissingValueError('App Name');\n    }\n    // Required app config keys\n    const configKeys = [\n        'projectId',\n        'apiKey',\n        'appId'\n    ];\n    for (const keyName of configKeys) {\n        if (!app.options[keyName]) {\n            throw getMissingValueError(keyName);\n        }\n    }\n    return {\n        appName: app.name,\n        projectId: app.options.projectId,\n        apiKey: app.options.apiKey,\n        appId: app.options.appId\n    };\n}\nfunction getMissingValueError(valueName) {\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n        valueName\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\nconst publicFactory = (container) => {\n    const app = container.getProvider('app').getImmediate();\n    // Throws if app isn't configured properly.\n    const appConfig = extractAppConfig(app);\n    const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n    const installationsImpl = {\n        app,\n        appConfig,\n        heartbeatServiceProvider,\n        _delete: () => Promise.resolve()\n    };\n    return installationsImpl;\n};\nconst internalFactory = (container) => {\n    const app = container.getProvider('app').getImmediate();\n    // Internal FIS instance relies on public FIS instance.\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n    const installationsInternal = {\n        getId: () => getId(installations),\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\n    };\n    return installationsInternal;\n};\nfunction registerInstallations() {\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n}\n\n/**\n * The Firebase Installations Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\nregisterVersion(name, version, 'esm2017');\n\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n//# sourceMappingURL=index.esm2017.js.map\n","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\nimport { ErrorFactory, calculateBackoffMillis, FirebaseError, isIndexedDBAvailable, validateIndexedDBOpenable, isBrowserExtension, areCookiesEnabled, getModularInstance, deepEqual } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport '@firebase/installations';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Type constant for Firebase Analytics.\n */\nconst ANALYTICS_TYPE = 'analytics';\n// Key to attach FID to in gtag params.\nconst GA_FID_KEY = 'firebase_id';\nconst ORIGIN_KEY = 'origin';\nconst FETCH_TIMEOUT_MILLIS = 60 * 1000;\nconst DYNAMIC_CONFIG_URL = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\nconst GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logger = new Logger('@firebase/analytics');\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERRORS = {\n    [\"already-exists\" /* AnalyticsError.ALREADY_EXISTS */]: 'A Firebase Analytics instance with the appId {$id} ' +\n        ' already exists. ' +\n        'Only one Firebase Analytics instance can be created for each appId.',\n    [\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */]: 'initializeAnalytics() cannot be called again with different options than those ' +\n        'it was initially called with. It can be called again with the same options to ' +\n        'return the existing instance, or getAnalytics() can be used ' +\n        'to get a reference to the already-initialized instance.',\n    [\"already-initialized-settings\" /* AnalyticsError.ALREADY_INITIALIZED_SETTINGS */]: 'Firebase Analytics has already been initialized.' +\n        'settings() must be called before initializing any Analytics instance' +\n        'or it will have no effect.',\n    [\"interop-component-reg-failed\" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */]: 'Firebase Analytics Interop Component failed to instantiate: {$reason}',\n    [\"invalid-analytics-context\" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */]: 'Firebase Analytics is not supported in this environment. ' +\n        'Wrap initialization of analytics in analytics.isSupported() ' +\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n    [\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */]: 'IndexedDB unavailable or restricted in this environment. ' +\n        'Wrap initialization of analytics in analytics.isSupported() ' +\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n    [\"fetch-throttle\" /* AnalyticsError.FETCH_THROTTLE */]: 'The config fetch request timed out while in an exponential backoff state.' +\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n    [\"config-fetch-failed\" /* AnalyticsError.CONFIG_FETCH_FAILED */]: 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\n    [\"no-api-key\" /* AnalyticsError.NO_API_KEY */]: 'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n        'contain a valid API key.',\n    [\"no-app-id\" /* AnalyticsError.NO_APP_ID */]: 'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n        'contain a valid app ID.',\n    [\"no-client-id\" /* AnalyticsError.NO_CLIENT_ID */]: 'The \"client_id\" field is empty.',\n    [\"invalid-gtag-resource\" /* AnalyticsError.INVALID_GTAG_RESOURCE */]: 'Trusted Types detected an invalid gtag resource: {$gtagURL}.'\n};\nconst ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Verifies and creates a TrustedScriptURL.\n */\nfunction createGtagTrustedTypesScriptURL(url) {\n    if (!url.startsWith(GTAG_URL)) {\n        const err = ERROR_FACTORY.create(\"invalid-gtag-resource\" /* AnalyticsError.INVALID_GTAG_RESOURCE */, {\n            gtagURL: url\n        });\n        logger.warn(err.message);\n        return '';\n    }\n    return url;\n}\n/**\n * Makeshift polyfill for Promise.allSettled(). Resolves when all promises\n * have either resolved or rejected.\n *\n * @param promises Array of promises to wait for.\n */\nfunction promiseAllSettled(promises) {\n    return Promise.all(promises.map(promise => promise.catch(e => e)));\n}\n/**\n * Creates a TrustedTypePolicy object that implements the rules passed as policyOptions.\n *\n * @param policyName A string containing the name of the policy\n * @param policyOptions Object containing implementations of instance methods for TrustedTypesPolicy, see {@link https://developer.mozilla.org/en-US/docs/Web/API/TrustedTypePolicy#instance_methods\n * | the TrustedTypePolicy reference documentation}.\n */\nfunction createTrustedTypesPolicy(policyName, policyOptions) {\n    // Create a TrustedTypes policy that we can use for updating src\n    // properties\n    let trustedTypesPolicy;\n    if (window.trustedTypes) {\n        trustedTypesPolicy = window.trustedTypes.createPolicy(policyName, policyOptions);\n    }\n    return trustedTypesPolicy;\n}\n/**\n * Inserts gtag script tag into the page to asynchronously download gtag.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nfunction insertScriptTag(dataLayerName, measurementId) {\n    const trustedTypesPolicy = createTrustedTypesPolicy('firebase-js-sdk-policy', {\n        createScriptURL: createGtagTrustedTypesScriptURL\n    });\n    const script = document.createElement('script');\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\n    const gtagScriptURL = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\n    script.src = trustedTypesPolicy\n        ? trustedTypesPolicy === null || trustedTypesPolicy === void 0 ? void 0 : trustedTypesPolicy.createScriptURL(gtagScriptURL)\n        : gtagScriptURL;\n    script.async = true;\n    document.head.appendChild(script);\n}\n/**\n * Get reference to, or create, global datalayer.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nfunction getOrCreateDataLayer(dataLayerName) {\n    // Check for existing dataLayer and create if needed.\n    let dataLayer = [];\n    if (Array.isArray(window[dataLayerName])) {\n        dataLayer = window[dataLayerName];\n    }\n    else {\n        window[dataLayerName] = dataLayer;\n    }\n    return dataLayer;\n}\n/**\n * Wrapped gtag logic when gtag is called with 'config' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param measurementId GA Measurement ID to set config for.\n * @param gtagParams Gtag config params to set.\n */\nasync function gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams) {\n    // If config is already fetched, we know the appId and can use it to look up what FID promise we\n    /// are waiting for, and wait only on that one.\n    const correspondingAppId = measurementIdToAppId[measurementId];\n    try {\n        if (correspondingAppId) {\n            await initializationPromisesMap[correspondingAppId];\n        }\n        else {\n            // If config is not fetched yet, wait for all configs (we don't know which one we need) and\n            // find the appId (if any) corresponding to this measurementId. If there is one, wait on\n            // that appId's initialization promise. If there is none, promise resolves and gtag\n            // call goes through.\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\n            const foundConfig = dynamicConfigResults.find(config => config.measurementId === measurementId);\n            if (foundConfig) {\n                await initializationPromisesMap[foundConfig.appId];\n            }\n        }\n    }\n    catch (e) {\n        logger.error(e);\n    }\n    gtagCore(\"config\" /* GtagCommand.CONFIG */, measurementId, gtagParams);\n}\n/**\n * Wrapped gtag logic when gtag is called with 'event' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementId GA Measurement ID to log event to.\n * @param gtagParams Params to log with this event.\n */\nasync function gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams) {\n    try {\n        let initializationPromisesToWaitFor = [];\n        // If there's a 'send_to' param, check if any ID specified matches\n        // an initializeIds() promise we are waiting for.\n        if (gtagParams && gtagParams['send_to']) {\n            let gaSendToList = gtagParams['send_to'];\n            // Make it an array if is isn't, so it can be dealt with the same way.\n            if (!Array.isArray(gaSendToList)) {\n                gaSendToList = [gaSendToList];\n            }\n            // Checking 'send_to' fields requires having all measurement ID results back from\n            // the dynamic config fetch.\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\n            for (const sendToId of gaSendToList) {\n                // Any fetched dynamic measurement ID that matches this 'send_to' ID\n                const foundConfig = dynamicConfigResults.find(config => config.measurementId === sendToId);\n                const initializationPromise = foundConfig && initializationPromisesMap[foundConfig.appId];\n                if (initializationPromise) {\n                    initializationPromisesToWaitFor.push(initializationPromise);\n                }\n                else {\n                    // Found an item in 'send_to' that is not associated\n                    // directly with an FID, possibly a group.  Empty this array,\n                    // exit the loop early, and let it get populated below.\n                    initializationPromisesToWaitFor = [];\n                    break;\n                }\n            }\n        }\n        // This will be unpopulated if there was no 'send_to' field , or\n        // if not all entries in the 'send_to' field could be mapped to\n        // a FID. In these cases, wait on all pending initialization promises.\n        if (initializationPromisesToWaitFor.length === 0) {\n            /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n            initializationPromisesToWaitFor = Object.values(initializationPromisesMap);\n        }\n        // Run core gtag function with args after all relevant initialization\n        // promises have been resolved.\n        await Promise.all(initializationPromisesToWaitFor);\n        // Workaround for http://b/141370449 - third argument cannot be undefined.\n        gtagCore(\"event\" /* GtagCommand.EVENT */, measurementId, gtagParams || {});\n    }\n    catch (e) {\n        logger.error(e);\n    }\n}\n/**\n * Wraps a standard gtag function with extra code to wait for completion of\n * relevant initialization promises before sending requests.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n */\nfunction wrapGtag(gtagCore, \n/**\n * Allows wrapped gtag calls to wait on whichever initialization promises are required,\n * depending on the contents of the gtag params' `send_to` field, if any.\n */\ninitializationPromisesMap, \n/**\n * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\n * before determining what initialization promises (which include FIDs) to wait for.\n */\ndynamicConfigPromisesList, \n/**\n * Wrapped gtag config calls can narrow down which initialization promise (with FID)\n * to wait for if the measurementId is already fetched, by getting the corresponding appId,\n * which is the key for the initialization promises map.\n */\nmeasurementIdToAppId) {\n    /**\n     * Wrapper around gtag that ensures FID is sent with gtag calls.\n     * @param command Gtag command type.\n     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\n     * @param gtagParams Params if event is EVENT/CONFIG.\n     */\n    async function gtagWrapper(command, ...args) {\n        try {\n            // If event, check that relevant initialization promises have completed.\n            if (command === \"event\" /* GtagCommand.EVENT */) {\n                const [measurementId, gtagParams] = args;\n                // If EVENT, second arg must be measurementId.\n                await gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams);\n            }\n            else if (command === \"config\" /* GtagCommand.CONFIG */) {\n                const [measurementId, gtagParams] = args;\n                // If CONFIG, second arg must be measurementId.\n                await gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams);\n            }\n            else if (command === \"consent\" /* GtagCommand.CONSENT */) {\n                const [consentAction, gtagParams] = args;\n                // consentAction can be one of 'default' or 'update'.\n                gtagCore(\"consent\" /* GtagCommand.CONSENT */, consentAction, gtagParams);\n            }\n            else if (command === \"get\" /* GtagCommand.GET */) {\n                const [measurementId, fieldName, callback] = args;\n                gtagCore(\"get\" /* GtagCommand.GET */, measurementId, fieldName, callback);\n            }\n            else if (command === \"set\" /* GtagCommand.SET */) {\n                const [customParams] = args;\n                // If SET, second arg must be params.\n                gtagCore(\"set\" /* GtagCommand.SET */, customParams);\n            }\n            else {\n                gtagCore(command, ...args);\n            }\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    return gtagWrapper;\n}\n/**\n * Creates global gtag function or wraps existing one if found.\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\n * 'event' calls that belong to the GAID associated with this Firebase instance.\n *\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param dataLayerName Name of global GA datalayer array.\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\n */\nfunction wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagFunctionName) {\n    // Create a basic core gtag function\n    let gtagCore = function (..._args) {\n        // Must push IArguments object, not an array.\n        window[dataLayerName].push(arguments);\n    };\n    // Replace it with existing one if found\n    if (window[gtagFunctionName] &&\n        typeof window[gtagFunctionName] === 'function') {\n        // @ts-ignore\n        gtagCore = window[gtagFunctionName];\n    }\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId);\n    return {\n        gtagCore,\n        wrappedGtag: window[gtagFunctionName]\n    };\n}\n/**\n * Returns the script tag in the DOM matching both the gtag url pattern\n * and the provided data layer name.\n */\nfunction findGtagScriptOnPage(dataLayerName) {\n    const scriptTags = window.document.getElementsByTagName('script');\n    for (const tag of Object.values(scriptTags)) {\n        if (tag.src &&\n            tag.src.includes(GTAG_URL) &&\n            tag.src.includes(dataLayerName)) {\n            return tag;\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Backoff factor for 503 errors, which we want to be conservative about\n * to avoid overloading servers. Each retry interval will be\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\n * will be ~30 seconds (with fuzzing).\n */\nconst LONG_RETRY_FACTOR = 30;\n/**\n * Base wait interval to multiplied by backoffFactor^backoffCount.\n */\nconst BASE_INTERVAL_MILLIS = 1000;\n/**\n * Stubbable retry data storage class.\n */\nclass RetryData {\n    constructor(throttleMetadata = {}, intervalMillis = BASE_INTERVAL_MILLIS) {\n        this.throttleMetadata = throttleMetadata;\n        this.intervalMillis = intervalMillis;\n    }\n    getThrottleMetadata(appId) {\n        return this.throttleMetadata[appId];\n    }\n    setThrottleMetadata(appId, metadata) {\n        this.throttleMetadata[appId] = metadata;\n    }\n    deleteThrottleMetadata(appId) {\n        delete this.throttleMetadata[appId];\n    }\n}\nconst defaultRetryData = new RetryData();\n/**\n * Set GET request headers.\n * @param apiKey App API key.\n */\nfunction getHeaders(apiKey) {\n    return new Headers({\n        Accept: 'application/json',\n        'x-goog-api-key': apiKey\n    });\n}\n/**\n * Fetches dynamic config from backend.\n * @param app Firebase app to fetch config for.\n */\nasync function fetchDynamicConfig(appFields) {\n    var _a;\n    const { appId, apiKey } = appFields;\n    const request = {\n        method: 'GET',\n        headers: getHeaders(apiKey)\n    };\n    const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\n    const response = await fetch(appUrl, request);\n    if (response.status !== 200 && response.status !== 304) {\n        let errorMessage = '';\n        try {\n            // Try to get any error message text from server response.\n            const jsonResponse = (await response.json());\n            if ((_a = jsonResponse.error) === null || _a === void 0 ? void 0 : _a.message) {\n                errorMessage = jsonResponse.error.message;\n            }\n        }\n        catch (_ignored) { }\n        throw ERROR_FACTORY.create(\"config-fetch-failed\" /* AnalyticsError.CONFIG_FETCH_FAILED */, {\n            httpStatus: response.status,\n            responseMessage: errorMessage\n        });\n    }\n    return response.json();\n}\n/**\n * Fetches dynamic config from backend, retrying if failed.\n * @param app Firebase app to fetch config for.\n */\nasync function fetchDynamicConfigWithRetry(app, \n// retryData and timeoutMillis are parameterized to allow passing a different value for testing.\nretryData = defaultRetryData, timeoutMillis) {\n    const { appId, apiKey, measurementId } = app.options;\n    if (!appId) {\n        throw ERROR_FACTORY.create(\"no-app-id\" /* AnalyticsError.NO_APP_ID */);\n    }\n    if (!apiKey) {\n        if (measurementId) {\n            return {\n                measurementId,\n                appId\n            };\n        }\n        throw ERROR_FACTORY.create(\"no-api-key\" /* AnalyticsError.NO_API_KEY */);\n    }\n    const throttleMetadata = retryData.getThrottleMetadata(appId) || {\n        backoffCount: 0,\n        throttleEndTimeMillis: Date.now()\n    };\n    const signal = new AnalyticsAbortSignal();\n    setTimeout(async () => {\n        // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n        signal.abort();\n    }, timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS);\n    return attemptFetchDynamicConfigWithRetry({ appId, apiKey, measurementId }, throttleMetadata, signal, retryData);\n}\n/**\n * Runs one retry attempt.\n * @param appFields Necessary app config fields.\n * @param throttleMetadata Ongoing metadata to determine throttling times.\n * @param signal Abort signal.\n */\nasync function attemptFetchDynamicConfigWithRetry(appFields, { throttleEndTimeMillis, backoffCount }, signal, retryData = defaultRetryData // for testing\n) {\n    var _a;\n    const { appId, measurementId } = appFields;\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    try {\n        await setAbortableTimeout(signal, throttleEndTimeMillis);\n    }\n    catch (e) {\n        if (measurementId) {\n            logger.warn(`Timed out fetching this Firebase app's measurement ID from the server.` +\n                ` Falling back to the measurement ID ${measurementId}` +\n                ` provided in the \"measurementId\" field in the local Firebase config. [${e === null || e === void 0 ? void 0 : e.message}]`);\n            return { appId, measurementId };\n        }\n        throw e;\n    }\n    try {\n        const response = await fetchDynamicConfig(appFields);\n        // Note the SDK only clears throttle state if response is success or non-retriable.\n        retryData.deleteThrottleMetadata(appId);\n        return response;\n    }\n    catch (e) {\n        const error = e;\n        if (!isRetriableError(error)) {\n            retryData.deleteThrottleMetadata(appId);\n            if (measurementId) {\n                logger.warn(`Failed to fetch this Firebase app's measurement ID from the server.` +\n                    ` Falling back to the measurement ID ${measurementId}` +\n                    ` provided in the \"measurementId\" field in the local Firebase config. [${error === null || error === void 0 ? void 0 : error.message}]`);\n                return { appId, measurementId };\n            }\n            else {\n                throw e;\n            }\n        }\n        const backoffMillis = Number((_a = error === null || error === void 0 ? void 0 : error.customData) === null || _a === void 0 ? void 0 : _a.httpStatus) === 503\n            ? calculateBackoffMillis(backoffCount, retryData.intervalMillis, LONG_RETRY_FACTOR)\n            : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\n        // Increments backoff state.\n        const throttleMetadata = {\n            throttleEndTimeMillis: Date.now() + backoffMillis,\n            backoffCount: backoffCount + 1\n        };\n        // Persists state.\n        retryData.setThrottleMetadata(appId, throttleMetadata);\n        logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\n        return attemptFetchDynamicConfigWithRetry(appFields, throttleMetadata, signal, retryData);\n    }\n}\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\n    return new Promise((resolve, reject) => {\n        // Derives backoff from given end time, normalizing negative numbers to zero.\n        const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n        const timeout = setTimeout(resolve, backoffMillis);\n        // Adds listener, rather than sets onabort, because signal is a shared object.\n        signal.addEventListener(() => {\n            clearTimeout(timeout);\n            // If the request completes before this timeout, the rejection has no effect.\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* AnalyticsError.FETCH_THROTTLE */, {\n                throttleEndTimeMillis\n            }));\n        });\n    });\n}\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e) {\n    if (!(e instanceof FirebaseError) || !e.customData) {\n        return false;\n    }\n    // Uses string index defined by ErrorData, which FirebaseError implements.\n    const httpStatus = Number(e.customData['httpStatus']);\n    return (httpStatus === 429 ||\n        httpStatus === 500 ||\n        httpStatus === 503 ||\n        httpStatus === 504);\n}\n/**\n * Shims a minimal AbortSignal (copied from Remote Config).\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nclass AnalyticsAbortSignal {\n    constructor() {\n        this.listeners = [];\n    }\n    addEventListener(listener) {\n        this.listeners.push(listener);\n    }\n    abort() {\n        this.listeners.forEach(listener => listener());\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Event parameters to set on 'gtag' during initialization.\n */\nlet defaultEventParametersForInit;\n/**\n * Logs an analytics event through the Firebase SDK.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\n * @param eventParams Analytics event parameters.\n */\nasync function logEvent$1(gtagFunction, initializationPromise, eventName, eventParams, options) {\n    if (options && options.global) {\n        gtagFunction(\"event\" /* GtagCommand.EVENT */, eventName, eventParams);\n        return;\n    }\n    else {\n        const measurementId = await initializationPromise;\n        const params = Object.assign(Object.assign({}, eventParams), { 'send_to': measurementId });\n        gtagFunction(\"event\" /* GtagCommand.EVENT */, eventName, params);\n    }\n}\n/**\n * Set screen_name parameter for this Google Analytics ID.\n *\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param screenName Screen name string to set.\n */\nasync function setCurrentScreen$1(gtagFunction, initializationPromise, screenName, options) {\n    if (options && options.global) {\n        gtagFunction(\"set\" /* GtagCommand.SET */, { 'screen_name': screenName });\n        return Promise.resolve();\n    }\n    else {\n        const measurementId = await initializationPromise;\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\n            update: true,\n            'screen_name': screenName\n        });\n    }\n}\n/**\n * Set user_id parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param id User ID string to set\n */\nasync function setUserId$1(gtagFunction, initializationPromise, id, options) {\n    if (options && options.global) {\n        gtagFunction(\"set\" /* GtagCommand.SET */, { 'user_id': id });\n        return Promise.resolve();\n    }\n    else {\n        const measurementId = await initializationPromise;\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\n            update: true,\n            'user_id': id\n        });\n    }\n}\n/**\n * Set all other user properties other than user_id and screen_name.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param properties Map of user properties to set\n */\nasync function setUserProperties$1(gtagFunction, initializationPromise, properties, options) {\n    if (options && options.global) {\n        const flatProperties = {};\n        for (const key of Object.keys(properties)) {\n            // use dot notation for merge behavior in gtag.js\n            flatProperties[`user_properties.${key}`] = properties[key];\n        }\n        gtagFunction(\"set\" /* GtagCommand.SET */, flatProperties);\n        return Promise.resolve();\n    }\n    else {\n        const measurementId = await initializationPromise;\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\n            update: true,\n            'user_properties': properties\n        });\n    }\n}\n/**\n * Retrieves a unique Google Analytics identifier for the web client.\n * See {@link https://developers.google.com/analytics/devguides/collection/ga4/reference/config#client_id | client_id}.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n */\nasync function internalGetGoogleAnalyticsClientId(gtagFunction, initializationPromise) {\n    const measurementId = await initializationPromise;\n    return new Promise((resolve, reject) => {\n        gtagFunction(\"get\" /* GtagCommand.GET */, measurementId, 'client_id', (clientId) => {\n            if (!clientId) {\n                reject(ERROR_FACTORY.create(\"no-client-id\" /* AnalyticsError.NO_CLIENT_ID */));\n            }\n            resolve(clientId);\n        });\n    });\n}\n/**\n * Set whether collection is enabled for this ID.\n *\n * @param enabled If true, collection is enabled for this ID.\n */\nasync function setAnalyticsCollectionEnabled$1(initializationPromise, enabled) {\n    const measurementId = await initializationPromise;\n    window[`ga-disable-${measurementId}`] = !enabled;\n}\n/**\n * Consent parameters to default to during 'gtag' initialization.\n */\nlet defaultConsentSettingsForInit;\n/**\n * Sets the variable {@link defaultConsentSettingsForInit} for use in the initialization of\n * analytics.\n *\n * @param consentSettings Maps the applicable end user consent state for gtag.js.\n */\nfunction _setConsentDefaultForInit(consentSettings) {\n    defaultConsentSettingsForInit = consentSettings;\n}\n/**\n * Sets the variable `defaultEventParametersForInit` for use in the initialization of\n * analytics.\n *\n * @param customParams Any custom params the user may pass to gtag.js.\n */\nfunction _setDefaultEventParametersForInit(customParams) {\n    defaultEventParametersForInit = customParams;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function validateIndexedDB() {\n    if (!isIndexedDBAvailable()) {\n        logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {\n            errorInfo: 'IndexedDB is not available in this environment.'\n        }).message);\n        return false;\n    }\n    else {\n        try {\n            await validateIndexedDBOpenable();\n        }\n        catch (e) {\n            logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {\n                errorInfo: e === null || e === void 0 ? void 0 : e.toString()\n            }).message);\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Initialize the analytics instance in gtag.js by calling config command with fid.\n *\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\n * part of the `page_view` event that's sent during the initialization\n * @param app Firebase app\n * @param gtagCore The gtag function that's not wrapped.\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\n * @param measurementIdToAppId Maps measurementID to appID.\n * @param installations _FirebaseInstallationsInternal instance.\n *\n * @returns Measurement ID.\n */\nasync function _initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCore, dataLayerName, options) {\n    var _a;\n    const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\n    // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\n    dynamicConfigPromise\n        .then(config => {\n        measurementIdToAppId[config.measurementId] = config.appId;\n        if (app.options.measurementId &&\n            config.measurementId !== app.options.measurementId) {\n            logger.warn(`The measurement ID in the local Firebase config (${app.options.measurementId})` +\n                ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\n                ` To ensure analytics events are always sent to the correct Analytics property,` +\n                ` update the` +\n                ` measurement ID field in the local config or remove it from the local config.`);\n        }\n    })\n        .catch(e => logger.error(e));\n    // Add to list to track state of all dynamic config promises.\n    dynamicConfigPromisesList.push(dynamicConfigPromise);\n    const fidPromise = validateIndexedDB().then(envIsValid => {\n        if (envIsValid) {\n            return installations.getId();\n        }\n        else {\n            return undefined;\n        }\n    });\n    const [dynamicConfig, fid] = await Promise.all([\n        dynamicConfigPromise,\n        fidPromise\n    ]);\n    // Detect if user has already put the gtag <script> tag on this page with the passed in\n    // data layer name.\n    if (!findGtagScriptOnPage(dataLayerName)) {\n        insertScriptTag(dataLayerName, dynamicConfig.measurementId);\n    }\n    // Detects if there are consent settings that need to be configured.\n    if (defaultConsentSettingsForInit) {\n        gtagCore(\"consent\" /* GtagCommand.CONSENT */, 'default', defaultConsentSettingsForInit);\n        _setConsentDefaultForInit(undefined);\n    }\n    // This command initializes gtag.js and only needs to be called once for the entire web app,\n    // but since it is idempotent, we can call it multiple times.\n    // We keep it together with other initialization logic for better code structure.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    gtagCore('js', new Date());\n    // User config added first. We don't want users to accidentally overwrite\n    // base Firebase config properties.\n    const configProperties = (_a = options === null || options === void 0 ? void 0 : options.config) !== null && _a !== void 0 ? _a : {};\n    // guard against developers accidentally setting properties with prefix `firebase_`\n    configProperties[ORIGIN_KEY] = 'firebase';\n    configProperties.update = true;\n    if (fid != null) {\n        configProperties[GA_FID_KEY] = fid;\n    }\n    // It should be the first config command called on this GA-ID\n    // Initialize this GA-ID and set FID on it using the gtag config API.\n    // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\n    // `configProperties`.\n    gtagCore(\"config\" /* GtagCommand.CONFIG */, dynamicConfig.measurementId, configProperties);\n    // Detects if there is data that will be set on every event logged from the SDK.\n    if (defaultEventParametersForInit) {\n        gtagCore(\"set\" /* GtagCommand.SET */, defaultEventParametersForInit);\n        _setDefaultEventParametersForInit(undefined);\n    }\n    return dynamicConfig.measurementId;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Analytics Service class.\n */\nclass AnalyticsService {\n    constructor(app) {\n        this.app = app;\n    }\n    _delete() {\n        delete initializationPromisesMap[this.app.options.appId];\n        return Promise.resolve();\n    }\n}\n/**\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\n * all or some of these, depending on the call's `send_to` param and the status\n * of the dynamic config fetches (see below).\n */\nlet initializationPromisesMap = {};\n/**\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\n * wait on all these to be complete in order to determine if it can selectively\n * wait for only certain initialization (FID) promises or if it must wait for all.\n */\nlet dynamicConfigPromisesList = [];\n/**\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\n * fetch completes. If already populated, gtag config calls can use this to\n * selectively wait for only this app's initialization promise (FID) instead of all\n * initialization promises.\n */\nconst measurementIdToAppId = {};\n/**\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\n */\nlet dataLayerName = 'dataLayer';\n/**\n * Name for window global gtag function used by GA: defaults to 'gtag'.\n */\nlet gtagName = 'gtag';\n/**\n * Reproduction of standard gtag function or reference to existing\n * gtag function on window object.\n */\nlet gtagCoreFunction;\n/**\n * Wrapper around gtag function that ensures FID is sent with all\n * relevant event and config calls.\n */\nlet wrappedGtagFunction;\n/**\n * Flag to ensure page initialization steps (creation or wrapping of\n * dataLayer and gtag script) are only run once per page load.\n */\nlet globalInitDone = false;\n/**\n * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.\n * Intended to be used if `gtag.js` script has been installed on\n * this page independently of Firebase Analytics, and is using non-default\n * names for either the `gtag` function or for `dataLayer`.\n * Must be called before calling `getAnalytics()` or it won't\n * have any effect.\n *\n * @public\n *\n * @param options - Custom gtag and dataLayer names.\n */\nfunction settings(options) {\n    if (globalInitDone) {\n        throw ERROR_FACTORY.create(\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */);\n    }\n    if (options.dataLayerName) {\n        dataLayerName = options.dataLayerName;\n    }\n    if (options.gtagName) {\n        gtagName = options.gtagName;\n    }\n}\n/**\n * Returns true if no environment mismatch is found.\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\n * error that also lists details for each mismatch found.\n */\nfunction warnOnBrowserContextMismatch() {\n    const mismatchedEnvMessages = [];\n    if (isBrowserExtension()) {\n        mismatchedEnvMessages.push('This is a browser extension environment.');\n    }\n    if (!areCookiesEnabled()) {\n        mismatchedEnvMessages.push('Cookies are not available.');\n    }\n    if (mismatchedEnvMessages.length > 0) {\n        const details = mismatchedEnvMessages\n            .map((message, index) => `(${index + 1}) ${message}`)\n            .join(' ');\n        const err = ERROR_FACTORY.create(\"invalid-analytics-context\" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */, {\n            errorInfo: details\n        });\n        logger.warn(err.message);\n    }\n}\n/**\n * Analytics instance factory.\n * @internal\n */\nfunction factory(app, installations, options) {\n    warnOnBrowserContextMismatch();\n    const appId = app.options.appId;\n    if (!appId) {\n        throw ERROR_FACTORY.create(\"no-app-id\" /* AnalyticsError.NO_APP_ID */);\n    }\n    if (!app.options.apiKey) {\n        if (app.options.measurementId) {\n            logger.warn(`The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\n                ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\n                ` provided in the \"measurementId\" field in the local Firebase config.`);\n        }\n        else {\n            throw ERROR_FACTORY.create(\"no-api-key\" /* AnalyticsError.NO_API_KEY */);\n        }\n    }\n    if (initializationPromisesMap[appId] != null) {\n        throw ERROR_FACTORY.create(\"already-exists\" /* AnalyticsError.ALREADY_EXISTS */, {\n            id: appId\n        });\n    }\n    if (!globalInitDone) {\n        // Steps here should only be done once per page: creation or wrapping\n        // of dataLayer and global gtag function.\n        getOrCreateDataLayer(dataLayerName);\n        const { wrappedGtag, gtagCore } = wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagName);\n        wrappedGtagFunction = wrappedGtag;\n        gtagCoreFunction = gtagCore;\n        globalInitDone = true;\n    }\n    // Async but non-blocking.\n    // This map reflects the completion state of all promises for each appId.\n    initializationPromisesMap[appId] = _initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCoreFunction, dataLayerName, options);\n    const analyticsInstance = new AnalyticsService(app);\n    return analyticsInstance;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Returns an {@link Analytics} instance for the given app.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nfunction getAnalytics(app = getApp()) {\n    app = getModularInstance(app);\n    // Dependencies\n    const analyticsProvider = _getProvider(app, ANALYTICS_TYPE);\n    if (analyticsProvider.isInitialized()) {\n        return analyticsProvider.getImmediate();\n    }\n    return initializeAnalytics(app);\n}\n/**\n * Returns an {@link Analytics} instance for the given app.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nfunction initializeAnalytics(app, options = {}) {\n    // Dependencies\n    const analyticsProvider = _getProvider(app, ANALYTICS_TYPE);\n    if (analyticsProvider.isInitialized()) {\n        const existingInstance = analyticsProvider.getImmediate();\n        if (deepEqual(options, analyticsProvider.getOptions())) {\n            return existingInstance;\n        }\n        else {\n            throw ERROR_FACTORY.create(\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */);\n        }\n    }\n    const analyticsInstance = analyticsProvider.initialize({ options });\n    return analyticsInstance;\n}\n/**\n * This is a public static method provided to users that wraps four different checks:\n *\n * 1. Check if it's not a browser extension environment.\n * 2. Check if cookies are enabled in current browser.\n * 3. Check if IndexedDB is supported by the browser environment.\n * 4. Check if the current browser context is valid for using `IndexedDB.open()`.\n *\n * @public\n *\n */\nasync function isSupported() {\n    if (isBrowserExtension()) {\n        return false;\n    }\n    if (!areCookiesEnabled()) {\n        return false;\n    }\n    if (!isIndexedDBAvailable()) {\n        return false;\n    }\n    try {\n        const isDBOpenable = await validateIndexedDBOpenable();\n        return isDBOpenable;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Use gtag `config` command to set `screen_name`.\n *\n * @public\n *\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param screenName - Screen name to set.\n */\nfunction setCurrentScreen(analyticsInstance, screenName, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setCurrentScreen$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], screenName, options).catch(e => logger.error(e));\n}\n/**\n * Retrieves a unique Google Analytics identifier for the web client.\n * See {@link https://developers.google.com/analytics/devguides/collection/ga4/reference/config#client_id | client_id}.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nasync function getGoogleAnalyticsClientId(analyticsInstance) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    return internalGetGoogleAnalyticsClientId(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId]);\n}\n/**\n * Use gtag `config` command to set `user_id`.\n *\n * @public\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param id - User ID to set.\n */\nfunction setUserId(analyticsInstance, id, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setUserId$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], id, options).catch(e => logger.error(e));\n}\n/**\n * Use gtag `config` command to set all params specified.\n *\n * @public\n */\nfunction setUserProperties(analyticsInstance, properties, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setUserProperties$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], properties, options).catch(e => logger.error(e));\n}\n/**\n * Sets whether Google Analytics collection is enabled for this app on this device.\n * Sets global `window['ga-disable-analyticsId'] = true;`\n *\n * @public\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param enabled - If true, enables collection, if false, disables it.\n */\nfunction setAnalyticsCollectionEnabled(analyticsInstance, enabled) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setAnalyticsCollectionEnabled$1(initializationPromisesMap[analyticsInstance.app.options.appId], enabled).catch(e => logger.error(e));\n}\n/**\n * Adds data that will be set on every event logged from the SDK, including automatic ones.\n * With gtag's \"set\" command, the values passed persist on the current page and are passed with\n * all subsequent events.\n * @public\n * @param customParams - Any custom params the user may pass to gtag.js.\n */\nfunction setDefaultEventParameters(customParams) {\n    // Check if reference to existing gtag function on window object exists\n    if (wrappedGtagFunction) {\n        wrappedGtagFunction(\"set\" /* GtagCommand.SET */, customParams);\n    }\n    else {\n        _setDefaultEventParametersForInit(customParams);\n    }\n}\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * List of official event parameters can be found in the gtag.js\n * reference documentation:\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n *\n * @public\n */\nfunction logEvent(analyticsInstance, eventName, eventParams, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    logEvent$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], eventName, eventParams, options).catch(e => logger.error(e));\n}\n/**\n * Sets the applicable end user consent state for this web app across all gtag references once\n * Firebase Analytics is initialized.\n *\n * Use the {@link ConsentSettings} to specify individual consent type values. By default consent\n * types are set to \"granted\".\n * @public\n * @param consentSettings - Maps the applicable end user consent state for gtag.js.\n */\nfunction setConsent(consentSettings) {\n    // Check if reference to existing gtag function on window object exists\n    if (wrappedGtagFunction) {\n        wrappedGtagFunction(\"consent\" /* GtagCommand.CONSENT */, 'update', consentSettings);\n    }\n    else {\n        _setConsentDefaultForInit(consentSettings);\n    }\n}\n\nconst name = \"@firebase/analytics\";\nconst version = \"0.10.11\";\n\n/**\n * The Firebase Analytics Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nfunction registerAnalytics() {\n    _registerComponent(new Component(ANALYTICS_TYPE, (container, { options: analyticsOptions }) => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const installations = container\n            .getProvider('installations-internal')\n            .getImmediate();\n        return factory(app, installations, analyticsOptions);\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    _registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n    registerVersion(name, version);\n    // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n    registerVersion(name, version, 'esm2017');\n    function internalFactory(container) {\n        try {\n            const analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\n            return {\n                logEvent: (eventName, eventParams, options) => logEvent(analytics, eventName, eventParams, options)\n            };\n        }\n        catch (e) {\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */, {\n                reason: e\n            });\n        }\n    }\n}\nregisterAnalytics();\n\nexport { getAnalytics, getGoogleAnalyticsClientId, initializeAnalytics, isSupported, logEvent, setAnalyticsCollectionEnabled, setConsent, setCurrentScreen, setDefaultEventParameters, setUserId, setUserProperties, settings };\n//# sourceMappingURL=index.esm2017.js.map\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage } from 'firebase/storage';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAnalytics } from 'firebase/analytics';\n\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,\n  appId: import.meta.env.VITE_FIREBASE_APP_ID,\n  measurementId: import.meta.env.VITE_FIREBASE_MEASUREMENT_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const storage = getStorage(app);\nexport const db = getFirestore(app);\nexport const analytics = getAnalytics(app);\n","import { collection, query, where, orderBy, getDocs, addDoc, updateDoc, deleteDoc, doc, getDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { db, storage } from '../config/firebase';\n\nexport interface Article {\n  id?: string;\n  title: string;\n  content: string;\n  slug: string;\n  imageUrl?: string;\n  published: boolean;\n  date: Date;\n  tags: string[];\n  category: string;\n}\n\nexport const articleService = {\n  // Récupérer tous les articles publiés\n  async getPublishedArticles(): Promise<Article[]> {\n    const q = query(\n      collection(db, 'articles'),\n      where('published', '==', true),\n      orderBy('date', 'desc')\n    );\n    \n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    } as Article));\n  },\n\n  // Récupérer tous les articles (publiés et brouillons) pour l'admin\n  async getAllArticles(): Promise<Article[]> {\n    const q = query(\n      collection(db, 'articles'),\n      orderBy('date', 'desc')\n    );\n    \n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    } as Article));\n  },\n\n  // Récupérer un article par son id\n  async getArticle(id: string): Promise<Article | null> {\n    const docRef = doc(db, 'articles', id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      return { id: docSnap.id, ...docSnap.data() } as Article;\n    }\n    return null;\n  },\n\n  // Créer un nouvel article\n  async createArticle(article: Omit<Article, 'id'>): Promise<string> {\n    const docRef = await addDoc(collection(db, 'articles'), {\n      ...article,\n      date: new Date()\n    });\n    return docRef.id;\n  },\n\n  // Mettre à jour un article\n  async updateArticle(id: string, article: Partial<Article>): Promise<void> {\n    const docRef = doc(db, 'articles', id);\n    await updateDoc(docRef, article);\n  },\n\n  // Supprimer un article\n  async deleteArticle(id: string): Promise<void> {\n    const docRef = doc(db, 'articles', id);\n    await deleteDoc(docRef);\n  },\n\n  // Upload une image\n  async uploadImage(file: File, path: string): Promise<string> {\n    const storageRef = ref(storage, `articles/${path}`);\n    await uploadBytes(storageRef, file);\n    return getDownloadURL(storageRef);\n  },\n\n  // Supprimer une image\n  async deleteImage(path: string): Promise<void> {\n    const storageRef = ref(storage, path);\n    await deleteObject(storageRef);\n  },\n\n  // Générer un slug unique\n  generateSlug(title: string): string {\n    return title\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)+/g, '');\n  }\n};\n","import { collection, query, getDocs, addDoc, updateDoc, deleteDoc, doc, where } from 'firebase/firestore';\nimport { db } from '../config/firebase';\n\nexport interface Category {\n  id?: string;\n  name: string;\n  slug: string;\n  description?: string;\n  color?: string;\n  parentId?: string;\n  order?: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport const categoryService = {\n  // Récupérer toutes les catégories\n  async getCategories(): Promise<Category[]> {\n    const q = query(collection(db, 'categories'));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    } as Category));\n  },\n\n  // Créer une nouvelle catégorie\n  async createCategory(category: Omit<Category, 'id'>): Promise<string> {\n    const docRef = await addDoc(collection(db, 'categories'), {\n      ...category,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    });\n    return docRef.id;\n  },\n\n  // Mettre à jour une catégorie\n  async updateCategory(id: string, category: Partial<Category>): Promise<void> {\n    const docRef = doc(db, 'categories', id);\n    await updateDoc(docRef, {\n      ...category,\n      updatedAt: new Date()\n    });\n  },\n\n  // Supprimer une catégorie\n  async deleteCategory(id: string): Promise<void> {\n    // Vérifier si la catégorie est utilisée\n    const articlesRef = collection(db, 'articles');\n    const q = query(articlesRef, where('category', '==', id));\n    const snapshot = await getDocs(q);\n    \n    if (!snapshot.empty) {\n      throw new Error('Cette catégorie est utilisée par des articles et ne peut pas être supprimée');\n    }\n\n    const docRef = doc(db, 'categories', id);\n    await deleteDoc(docRef);\n  },\n\n  // Générer un slug unique\n  generateSlug(name: string): string {\n    return name\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)+/g, '');\n  },\n\n  // Générer une couleur aléatoire\n  generateColor(): string {\n    const colors = [\n      'blue', 'green', 'red', 'yellow', 'purple', 'pink', 'indigo', 'teal'\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  },\n\n  // Obtenir la classe Tailwind pour une couleur\n  getColorClass(color: string): { bg: string; text: string; border: string } {\n    const colorMap: { [key: string]: { bg: string; text: string; border: string } } = {\n      blue: {\n        bg: 'bg-blue-100',\n        text: 'text-blue-800',\n        border: 'border-blue-200'\n      },\n      green: {\n        bg: 'bg-green-100',\n        text: 'text-green-800',\n        border: 'border-green-200'\n      },\n      red: {\n        bg: 'bg-red-100',\n        text: 'text-red-800',\n        border: 'border-red-200'\n      },\n      yellow: {\n        bg: 'bg-yellow-100',\n        text: 'text-yellow-800',\n        border: 'border-yellow-200'\n      },\n      purple: {\n        bg: 'bg-purple-100',\n        text: 'text-purple-800',\n        border: 'border-purple-200'\n      },\n      pink: {\n        bg: 'bg-pink-100',\n        text: 'text-pink-800',\n        border: 'border-pink-200'\n      },\n      indigo: {\n        bg: 'bg-indigo-100',\n        text: 'text-indigo-800',\n        border: 'border-indigo-200'\n      },\n      teal: {\n        bg: 'bg-teal-100',\n        text: 'text-teal-800',\n        border: 'border-teal-200'\n      }\n    };\n\n    return colorMap[color] || colorMap.blue;\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { Category, categoryService } from '../../services/categoryService';\n\ninterface CategoryFormData {\n  name: string;\n  description: string;\n  parentId?: string;\n  color?: string;\n}\n\nexport default function CategoryManager() {\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [editingCategory, setEditingCategory] = useState<Category | null>(null);\n  const [formData, setFormData] = useState<CategoryFormData>({\n    name: '',\n    description: '',\n  });\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = async () => {\n    try {\n      setLoading(true);\n      const data = await categoryService.getCategories();\n      setCategories(data);\n    } catch (err) {\n      setError('Erreur lors du chargement des catégories');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const categoryData = {\n        ...formData,\n        slug: categoryService.generateSlug(formData.name),\n        color: formData.color || categoryService.generateColor(),\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n\n      if (editingCategory) {\n        await categoryService.updateCategory(editingCategory.id!, categoryData);\n      } else {\n        await categoryService.createCategory(categoryData);\n      }\n\n      await loadCategories();\n      resetForm();\n    } catch (err) {\n      setError('Erreur lors de la sauvegarde de la catégorie');\n      console.error(err);\n    }\n  };\n\n  const handleDelete = async (category: Category) => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette catégorie ?')) {\n      return;\n    }\n\n    try {\n      await categoryService.deleteCategory(category.id!);\n      await loadCategories();\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError('Erreur lors de la suppression de la catégorie');\n      }\n      console.error(err);\n    }\n  };\n\n  const handleEdit = (category: Category) => {\n    setEditingCategory(category);\n    setFormData({\n      name: category.name,\n      description: category.description || '',\n      parentId: category.parentId,\n      color: category.color,\n    });\n    setShowForm(true);\n  };\n\n  const resetForm = () => {\n    setFormData({ name: '', description: '' });\n    setEditingCategory(null);\n    setShowForm(false);\n    setError(null);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">\n          Gestion des catégories\n        </h1>\n        <button\n          onClick={() => setShowForm(!showForm)}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          {showForm ? 'Annuler' : 'Nouvelle catégorie'}\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 bg-red-50 border-l-4 border-red-400 p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showForm && (\n        <form onSubmit={handleSubmit} className=\"mb-8 bg-white shadow rounded-lg p-6\">\n          <div className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                Nom\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                required\n                value={formData.name}\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n                Description\n              </label>\n              <textarea\n                id=\"description\"\n                rows={3}\n                value={formData.description}\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"parentId\" className=\"block text-sm font-medium text-gray-700\">\n                Catégorie parente\n              </label>\n              <select\n                id=\"parentId\"\n                value={formData.parentId || ''}\n                onChange={(e) => setFormData({ ...formData, parentId: e.target.value || undefined })}\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n              >\n                <option value=\"\">Aucune</option>\n                {categories\n                  .filter((cat) => cat.id !== editingCategory?.id)\n                  .map((category) => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"color\" className=\"block text-sm font-medium text-gray-700\">\n                Couleur\n              </label>\n              <select\n                id=\"color\"\n                value={formData.color || ''}\n                onChange={(e) => setFormData({ ...formData, color: e.target.value })}\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n              >\n                <option value=\"\">Aléatoire</option>\n                <option value=\"blue\">Bleu</option>\n                <option value=\"green\">Vert</option>\n                <option value=\"red\">Rouge</option>\n                <option value=\"yellow\">Jaune</option>\n                <option value=\"purple\">Violet</option>\n                <option value=\"pink\">Rose</option>\n                <option value=\"indigo\">Indigo</option>\n                <option value=\"teal\">Turquoise</option>\n              </select>\n            </div>\n\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                type=\"button\"\n                onClick={resetForm}\n                className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Annuler\n              </button>\n              <button\n                type=\"submit\"\n                className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                {editingCategory ? 'Mettre à jour' : 'Créer'}\n              </button>\n            </div>\n          </div>\n        </form>\n      )}\n\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n        <ul className=\"divide-y divide-gray-200\">\n          {categories.map((category) => {\n            const colorClass = categoryService.getColorClass(category.color || 'blue');\n            return (\n              <li key={category.id} className=\"px-6 py-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <span\n                      className={`inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium ${colorClass.bg} ${colorClass.text} ${colorClass.border}`}\n                    >\n                      {category.name}\n                    </span>\n                    {category.description && (\n                      <span className=\"text-sm text-gray-500\">\n                        {category.description}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <button\n                      onClick={() => handleEdit(category)}\n                      className=\"text-blue-600 hover:text-blue-900\"\n                    >\n                      Modifier\n                    </button>\n                    <button\n                      onClick={() => handleDelete(category)}\n                      className=\"text-red-600 hover:text-red-900\"\n                    >\n                      Supprimer\n                    </button>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      {loading && (\n        <div className=\"flex justify-center mt-4\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import {\n  collection,\n  addDoc,\n  updateDoc,\n  doc,\n  getDocs,\n  query,\n  where,\n  orderBy,\n  serverTimestamp,\n  writeBatch,\n  increment as firestoreIncrement,\n  Timestamp\n} from 'firebase/firestore';\nimport { db } from '../config/firebase';\n\nexport interface Comment {\n  id?: string;\n  articleId: string;\n  parentId?: string;\n  author: {\n    name: string;\n    email: string;\n    avatar?: string;\n  };\n  content: string;\n  status: 'pending' | 'approved' | 'rejected';\n  likes: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport const commentService = {\n  // Récupérer les commentaires d'un article\n  async getComments(articleId: string, status?: string): Promise<Comment[]> {\n    const commentsRef = collection(db, 'comments');\n    const constraints: any[] = [\n      where('articleId', '==', articleId),\n      orderBy('createdAt', 'desc')\n    ];\n\n    if (status) {\n      constraints.push(where('status', '==', status));\n    }\n\n    const q = query(commentsRef, ...constraints);\n    const snapshot = await getDocs(q);\n\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      createdAt: (doc.data().createdAt as Timestamp).toDate(),\n      updatedAt: (doc.data().updatedAt as Timestamp).toDate()\n    })) as Comment[];\n  },\n\n  // Créer un nouveau commentaire\n  async createComment(comment: Omit<Comment, 'id' | 'createdAt' | 'updatedAt' | 'likes'>): Promise<string> {\n    const docRef = await addDoc(collection(db, 'comments'), {\n      ...comment,\n      likes: 0,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp()\n    });\n    return docRef.id;\n  },\n\n  // Mettre à jour un commentaire\n  async updateComment(id: string, data: Partial<Comment>): Promise<void> {\n    const docRef = doc(db, 'comments', id);\n    await updateDoc(docRef, {\n      ...data,\n      updatedAt: serverTimestamp()\n    });\n  },\n\n  // Supprimer un commentaire\n  async deleteComment(id: string): Promise<void> {\n    // Supprimer aussi les réponses à ce commentaire\n    const repliesRef = collection(db, 'comments');\n    const q = query(repliesRef, where('parentId', '==', id));\n    const snapshot = await getDocs(q);\n    \n    const batch = writeBatch(db);\n    snapshot.docs.forEach(doc => {\n      batch.delete(doc.ref);\n    });\n    \n    const commentRef = doc(db, 'comments', id);\n    batch.delete(commentRef);\n    \n    await batch.commit();\n  },\n\n  // Modérer un commentaire\n  async moderateComment(id: string, status: 'approved' | 'rejected'): Promise<void> {\n    await this.updateComment(id, { status });\n  },\n\n  // Liker un commentaire\n  async likeComment(id: string): Promise<void> {\n    const batch = writeBatch(db);\n    const commentRef = doc(db, 'comments', id);\n    \n    batch.update(commentRef, {\n      likes: firestoreIncrement(1)\n    });\n\n    await batch.commit();\n  },\n\n  // Récupérer les commentaires en attente de modération\n  async getPendingComments(): Promise<Comment[]> {\n    return this.getComments('', 'pending');\n  },\n\n  // Formater la date relative\n  formatRelativeDate(date: Date): string {\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n\n    if (days > 7) {\n      return date.toLocaleDateString('fr-FR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    } else if (days > 0) {\n      return `il y a ${days} jour${days > 1 ? 's' : ''}`;\n    } else if (hours > 0) {\n      return `il y a ${hours} heure${hours > 1 ? 's' : ''}`;\n    } else if (minutes > 0) {\n      return `il y a ${minutes} minute${minutes > 1 ? 's' : ''}`;\n    } else {\n      return 'à l\\'instant';\n    }\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { Comment, commentService } from '../../services/commentService';\nimport { articleService } from '../../services/articleService';\n\nexport default function CommentModeration() {\n  const [comments, setComments] = useState<(Comment & { articleTitle?: string })[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadPendingComments();\n  }, []);\n\n  const loadPendingComments = async () => {\n    try {\n      setLoading(true);\n      const pendingComments = await commentService.getPendingComments();\n      \n      // Charger les titres des articles\n      const commentsWithArticles = await Promise.all(\n        pendingComments.map(async (comment) => {\n          try {\n            const article = await articleService.getArticle(comment.articleId);\n            return {\n              ...comment,\n              articleTitle: article?.title || 'Article supprimé'\n            };\n          } catch (err) {\n            return {\n              ...comment,\n              articleTitle: 'Article non trouvé'\n            };\n          }\n        })\n      );\n\n      setComments(commentsWithArticles);\n    } catch (err) {\n      setError('Erreur lors du chargement des commentaires');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleModerate = async (commentId: string, status: 'approved' | 'rejected') => {\n    try {\n      await commentService.moderateComment(commentId, status);\n      setComments(comments.filter(comment => comment.id !== commentId));\n    } catch (err) {\n      setError('Erreur lors de la modération du commentaire');\n      console.error(err);\n    }\n  };\n\n  const handleDelete = async (commentId: string) => {\n    if (!window.confirm('Êtes-vous sûr de vouloir supprimer ce commentaire ?')) {\n      return;\n    }\n\n    try {\n      await commentService.deleteComment(commentId);\n      setComments(comments.filter(comment => comment.id !== commentId));\n    } catch (err) {\n      setError('Erreur lors de la suppression du commentaire');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold text-gray-900 mb-8\">\n        Modération des commentaires\n      </h1>\n\n      {error && (\n        <div className=\"mb-4 bg-red-50 border-l-4 border-red-400 p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n        <ul className=\"divide-y divide-gray-200\">\n          {comments.map(comment => (\n            <li key={comment.id} className=\"p-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-900\">\n                      {comment.author.name}\n                    </h3>\n                    <p className=\"text-sm text-gray-500\">\n                      {comment.author.email}\n                    </p>\n                  </div>\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                    En attente\n                  </span>\n                </div>\n\n                <div>\n                  <p className=\"text-sm text-gray-600\">\n                    Article : {comment.articleTitle}\n                  </p>\n                  <p className=\"mt-1 text-sm text-gray-900\">\n                    {comment.content}\n                  </p>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <p className=\"text-sm text-gray-500\">\n                    {commentService.formatRelativeDate(comment.createdAt)}\n                  </p>\n                  <div className=\"flex items-center space-x-4\">\n                    <button\n                      onClick={() => handleModerate(comment.id!, 'approved')}\n                      className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n                    >\n                      Approuver\n                    </button>\n                    <button\n                      onClick={() => handleModerate(comment.id!, 'rejected')}\n                      className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\"\n                    >\n                      Rejeter\n                    </button>\n                    <button\n                      onClick={() => handleDelete(comment.id!)}\n                      className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                    >\n                      Supprimer\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n\n        {comments.length === 0 && !loading && (\n          <div className=\"text-center py-12\">\n            <svg\n              className=\"mx-auto h-12 w-12 text-gray-400\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\"\n              />\n            </svg>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n              Aucun commentaire en attente\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Tous les commentaires ont été modérés.\n            </p>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"flex justify-center py-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { \n  collection,\n  query,\n  where,\n  orderBy,\n  getDocs,\n  writeBatch,\n  limit as firestoreLimit,\n  Timestamp,\n  doc,\n  setDoc,\n  getDoc,\n  increment as firestoreIncrement,\n  serverTimestamp\n} from 'firebase/firestore';\nimport { db } from '../config/firebase';\n\nexport interface ArticleStats {\n  id?: string;\n  articleId: string;\n  views: number;\n  uniqueVisitors: number;\n  readTime: number;\n  shares: {\n    facebook: number;\n    twitter: number;\n    linkedin: number;\n    email: number;\n  };\n  engagement: {\n    scrollDepth: number;\n    timeOnPage: number;\n    commentCount: number;\n    likeCount: number;\n  };\n  deviceStats: {\n    mobile: number;\n    desktop: number;\n    tablet: number;\n  };\n  referrers: { [key: string]: number };\n  updatedAt: Date;\n}\n\nexport interface DailyStats {\n  date: string;\n  views: number;\n  uniqueVisitors: number;\n  articleId: string;\n}\n\nexport interface Stats {\n  id: string;\n  articleId: string;\n  views: number;\n  likes: number;\n  shares: number;\n  comments: number;\n  date: Date;\n}\n\nexport const statsService = {\n  // Enregistrer une vue d'article\n  async recordView(articleId: string, data: {\n    isUnique?: boolean;\n    device: 'mobile' | 'desktop' | 'tablet';\n    referrer?: string;\n  }): Promise<void> {\n    const statsRef = doc(db, 'articleStats', articleId);\n    const dailyStatsRef = doc(db, 'dailyStats', `${articleId}_${this.getToday()}`);\n\n    const batch = writeBatch(db);\n\n    // Mise à jour des stats globales\n    batch.set(statsRef, {\n      articleId,\n      views: firestoreIncrement(1),\n      uniqueVisitors: firestoreIncrement(data.isUnique ? 1 : 0),\n      [`deviceStats.${data.device}`]: firestoreIncrement(1),\n      updatedAt: serverTimestamp()\n    }, { merge: true });\n\n    if (data.referrer) {\n      batch.set(statsRef, {\n        [`referrers.${data.referrer}`]: firestoreIncrement(1)\n      }, { merge: true });\n    }\n\n    // Mise à jour des stats journalières\n    batch.set(dailyStatsRef, {\n      articleId,\n      date: this.getToday(),\n      views: firestoreIncrement(1),\n      uniqueVisitors: firestoreIncrement(data.isUnique ? 1 : 0)\n    }, { merge: true });\n\n    await batch.commit();\n  },\n\n  // Enregistrer l'engagement\n  async recordEngagement(articleId: string, data: {\n    scrollDepth?: number;\n    timeOnPage?: number;\n  }): Promise<void> {\n    const statsRef = doc(db, 'articleStats', articleId);\n    await setDoc(statsRef, {\n      engagement: {\n        scrollDepth: data.scrollDepth,\n        timeOnPage: data.timeOnPage\n      },\n      updatedAt: serverTimestamp()\n    }, { merge: true });\n  },\n\n  // Enregistrer un partage\n  async recordShare(articleId: string, platform: 'facebook' | 'twitter' | 'linkedin' | 'email'): Promise<void> {\n    const statsRef = doc(db, 'articleStats', articleId);\n    await setDoc(statsRef, {\n      [`shares.${platform}`]: firestoreIncrement(1),\n      updatedAt: serverTimestamp()\n    }, { merge: true });\n  },\n\n  // Obtenir les statistiques d'un article\n  async getArticleStats(articleId: string): Promise<ArticleStats | null> {\n    const docRef = doc(db, 'articleStats', articleId);\n    const docSnap = await getDoc(docRef);\n    \n    if (!docSnap.exists()) {\n      return null;\n    }\n\n    return {\n      id: docSnap.id,\n      ...docSnap.data(),\n      updatedAt: (docSnap.data().updatedAt as Timestamp).toDate()\n    } as ArticleStats;\n  },\n\n  // Obtenir les statistiques journalières d'un article\n  async getDailyStats(articleId: string, days: number = 30): Promise<DailyStats[]> {\n    const startDate = this.getDateBefore(days);\n    const statsRef = collection(db, 'dailyStats');\n    const q = query(\n      statsRef,\n      where('articleId', '==', articleId),\n      where('date', '>=', startDate),\n      orderBy('date', 'desc')\n    );\n\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => doc.data() as DailyStats);\n  },\n\n  // Obtenir les articles les plus vus\n  async getMostViewedArticles(limit: number = 10): Promise<ArticleStats[]> {\n    const statsRef = collection(db, 'articleStats');\n    const q = query(\n      statsRef,\n      orderBy('views', 'desc'),\n      firestoreLimit(limit)\n    );\n\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      updatedAt: (doc.data().updatedAt as Timestamp).toDate()\n    })) as ArticleStats[];\n  },\n\n  // Obtenir les articles les plus engageants\n  async getMostEngagingArticles(limit: number = 10): Promise<ArticleStats[]> {\n    const statsRef = collection(db, 'articleStats');\n    const q = query(\n      statsRef,\n      orderBy('engagement.timeOnPage', 'desc'),\n      firestoreLimit(limit)\n    );\n\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      updatedAt: (doc.data().updatedAt as Timestamp).toDate()\n    })) as ArticleStats[];\n  },\n\n  // Obtenir les statistiques\n  async getStats(startDate: Date, endDate: Date, maxResults: number = 10): Promise<Stats[]> {\n    const statsRef = collection(db, 'stats');\n    const q = query(\n      statsRef,\n      where('date', '>=', startDate),\n      where('date', '<=', endDate),\n      orderBy('date', 'desc'),\n      firestoreLimit(maxResults)\n    );\n    \n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      date: (doc.data().date as Timestamp).toDate()\n    })) as Stats[];\n  },\n\n  // Mettre à jour les statistiques\n  async updateStats(stats: Stats): Promise<void> {\n    const batch = writeBatch(db);\n    const statsRef = doc(db, 'stats', stats.id);\n    batch.update(statsRef, {\n      views: stats.views,\n      likes: stats.likes,\n      shares: stats.shares,\n      comments: stats.comments,\n      date: Timestamp.fromDate(stats.date)\n    });\n    await batch.commit();\n  },\n\n  // Utilitaires\n  getToday(): string {\n    return new Date().toISOString().split('T')[0];\n  },\n\n  getDateBefore(days: number): string {\n    const date = new Date();\n    date.setDate(date.getDate() - days);\n    return date.toISOString().split('T')[0];\n  },\n\n  // Formater les nombres\n  formatNumber(num: number): string {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(1) + 'M';\n    }\n    if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'k';\n    }\n    return num.toString();\n  },\n\n  // Formater le temps de lecture\n  formatReadTime(seconds: number): string {\n    const minutes = Math.floor(seconds / 60);\n    if (minutes < 1) {\n      return 'moins d\\'une minute';\n    }\n    return `${minutes} minute${minutes > 1 ? 's' : ''}`;\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { Line, Pie, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  BarElement\n} from 'chart.js';\nimport { ArticleStats, DailyStats, statsService } from '../../services/statsService';\nimport { articleService } from '../../services/articleService';\n\n// Enregistrer les composants Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  BarElement\n);\n\ninterface ArticleWithStats extends ArticleStats {\n  title?: string;\n}\n\nexport default function StatsDashboard() {\n  const [selectedPeriod, setSelectedPeriod] = useState<number>(30);\n  const [topArticles, setTopArticles] = useState<ArticleWithStats[]>([]);\n  const [dailyStats, setDailyStats] = useState<DailyStats[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadStats();\n  }, [selectedPeriod]);\n\n  const loadStats = async () => {\n    try {\n      setLoading(true);\n\n      // Charger les articles les plus vus\n      const mostViewed = await statsService.getMostViewedArticles(5);\n      const articlesWithTitles = await Promise.all(\n        mostViewed.map(async (stats) => {\n          try {\n            const article = await articleService.getArticle(stats.articleId);\n            return {\n              ...stats,\n              title: article?.title || 'Article supprimé'\n            };\n          } catch (err) {\n            return {\n              ...stats,\n              title: 'Article non trouvé'\n            };\n          }\n        })\n      );\n      setTopArticles(articlesWithTitles);\n\n      // Charger les statistiques journalières du premier article\n      if (articlesWithTitles.length > 0) {\n        const stats = await statsService.getDailyStats(articlesWithTitles[0].articleId, selectedPeriod);\n        setDailyStats(stats);\n      }\n    } catch (err) {\n      setError('Erreur lors du chargement des statistiques');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const viewsData = {\n    labels: dailyStats.map(stat => stat.date),\n    datasets: [\n      {\n        label: 'Vues',\n        data: dailyStats.map(stat => stat.views),\n        borderColor: 'rgb(59, 130, 246)',\n        backgroundColor: 'rgba(59, 130, 246, 0.5)',\n        tension: 0.4\n      },\n      {\n        label: 'Visiteurs uniques',\n        data: dailyStats.map(stat => stat.uniqueVisitors),\n        borderColor: 'rgb(16, 185, 129)',\n        backgroundColor: 'rgba(16, 185, 129, 0.5)',\n        tension: 0.4\n      }\n    ]\n  };\n\n  const deviceData = {\n    labels: ['Mobile', 'Desktop', 'Tablet'],\n    datasets: [{\n      data: topArticles.length > 0 ? [\n        topArticles[0].deviceStats.mobile,\n        topArticles[0].deviceStats.desktop,\n        topArticles[0].deviceStats.tablet\n      ] : [],\n      backgroundColor: [\n        'rgba(59, 130, 246, 0.5)',\n        'rgba(16, 185, 129, 0.5)',\n        'rgba(251, 191, 36, 0.5)'\n      ],\n      borderColor: [\n        'rgb(59, 130, 246)',\n        'rgb(16, 185, 129)',\n        'rgb(251, 191, 36)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  const sharesData = {\n    labels: ['Facebook', 'Twitter', 'LinkedIn', 'Email'],\n    datasets: [{\n      data: topArticles.length > 0 ? [\n        topArticles[0].shares.facebook,\n        topArticles[0].shares.twitter,\n        topArticles[0].shares.linkedin,\n        topArticles[0].shares.email\n      ] : [],\n      backgroundColor: [\n        'rgba(66, 103, 178, 0.5)',\n        'rgba(29, 161, 242, 0.5)',\n        'rgba(0, 119, 181, 0.5)',\n        'rgba(234, 67, 53, 0.5)'\n      ],\n      borderColor: [\n        'rgb(66, 103, 178)',\n        'rgb(29, 161, 242)',\n        'rgb(0, 119, 181)',\n        'rgb(234, 67, 53)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">\n          Statistiques des articles\n        </h1>\n        <select\n          value={selectedPeriod}\n          onChange={(e) => setSelectedPeriod(Number(e.target.value))}\n          className=\"ml-4 block pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\n        >\n          <option value={7}>7 jours</option>\n          <option value={30}>30 jours</option>\n          <option value={90}>90 jours</option>\n        </select>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 bg-red-50 border-l-4 border-red-400 p-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n        {/* Articles les plus vus */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n            Articles les plus vus\n          </h2>\n          <div className=\"space-y-4\">\n            {topArticles.map((article, index) => (\n              <div key={article.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-lg font-medium text-gray-500 w-8\">\n                    #{index + 1}\n                  </span>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-900\">\n                      {article.title}\n                    </h3>\n                    <p className=\"text-sm text-gray-500\">\n                      {statsService.formatNumber(article.views)} vues\n                    </p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-sm font-medium text-gray-900\">\n                    {statsService.formatNumber(article.uniqueVisitors)} visiteurs\n                  </p>\n                  <p className=\"text-sm text-gray-500\">\n                    {Math.round((article.uniqueVisitors / article.views) * 100)}% uniques\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Graphique des vues */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n            Évolution des vues\n          </h2>\n          <div className=\"h-64\">\n            <Line\n              data={viewsData}\n              options={{\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Répartition par appareil */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n            Répartition par appareil\n          </h2>\n          <div className=\"h-64\">\n            <Pie\n              data={deviceData}\n              options={{\n                responsive: true,\n                maintainAspectRatio: false\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Partages sociaux */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n            Partages sociaux\n          </h2>\n          <div className=\"h-64\">\n            <Bar\n              data={sharesData}\n              options={{\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                  y: {\n                    beginAtZero: true\n                  }\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {loading && (\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-25 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","name","version","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","TOKEN_EXPIRATION_BUFFER","ERROR_FACTORY","ErrorFactory","isServerError","error","FirebaseError","code","includes","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","replace","creationTime","Date","now","async","getErrorFromResponse","requestName","errorData","json","create","serverCode","serverMessage","message","serverStatus","status","getHeaders","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","result","sleep","ms","Promise","resolve","setTimeout","VALID_FID_PATTERN","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","b64String","array","btoa","String","fromCharCode","substr","encode","test","_a","getKey","appName","appId","fidChangeCallbacks","Map","fidChanged","callFidChangeCallbacks","channel","broadcastChannel","BroadcastChannel","onmessage","data","getBroadcastChannel","postMessage","size","close","broadcastFidChange","callbacks","get","callback","OBJECT_STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","set","value","tx","transaction","objectStore","oldValue","put","done","remove","delete","update","updateFn","store","newValue","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","entry","registrationStatus","clearTimedOutRequest","updateOrCreateInstallationEntry","entryWithPromise","navigator","onLine","reject","inProgressEntry","registrationTime","registeredInstallationEntry","heartbeatServiceProvider","endpoint","heartbeatService","getImmediate","optional","heartbeatsHeader","getHeartbeatsHeader","body","authVersion","sdkVersion","request","method","JSON","stringify","fetch","ok","responseValue","authToken","createInstallationRequest","customData","registerInstallation","waitUntilFidRegistration","triggerRegistrationIfNecessary","updateInstallationRequest","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","installation","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","isAuthTokenValid","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","assign","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","getToken","installationsImpl","completeInstallationRegistration","getMissingValueError","valueName","INSTALLATIONS_NAME","internalFactory","container","app","getProvider","_getProvider","getId","catch","console","_registerComponent","Component","options","configKeys","keyName","extractAppConfig","_delete","registerVersion","ANALYTICS_TYPE","GTAG_URL","logger","Logger","createGtagTrustedTypesScriptURL","url","startsWith","err","gtagURL","warn","promiseAllSettled","promises","all","map","promise","insertScriptTag","dataLayerName","measurementId","trustedTypesPolicy","policyName","policyOptions","window","trustedTypes","createPolicy","createTrustedTypesPolicy","createScriptURL","script","document","createElement","gtagScriptURL","src","head","appendChild","wrapGtag","gtagCore","initializationPromisesMap","dynamicConfigPromisesList","measurementIdToAppId","command","args","gtagParams","initializationPromisesToWaitFor","gaSendToList","Array","isArray","dynamicConfigResults","sendToId","foundConfig","find","config","initializationPromise","push","length","values","gtagOnEvent","correspondingAppId","gtagOnConfig","consentAction","fieldName","customParams","defaultRetryData","constructor","throttleMetadata","intervalMillis","this","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","fetchDynamicConfigWithRetry","retryData","timeoutMillis","backoffCount","throttleEndTimeMillis","signal","AnalyticsAbortSignal","abort","attemptFetchDynamicConfigWithRetry","appFields","backoffMillis","Math","max","timeout","addEventListener","clearTimeout","setAbortableTimeout","appUrl","errorMessage","jsonResponse","_ignored","httpStatus","responseMessage","fetchDynamicConfig","isRetriableError","calculateBackoffMillis","debug","listeners","listener","forEach","_initializeAnalytics","dynamicConfigPromise","then","fidPromise","isIndexedDBAvailable","errorInfo","validateIndexedDBOpenable","toString","validateIndexedDB","envIsValid","dynamicConfig","scriptTags","getElementsByTagName","tag","findGtagScriptOnPage","configProperties","AnalyticsService","gtagCoreFunction","wrappedGtagFunction","globalInitDone","factory","mismatchedEnvMessages","isBrowserExtension","areCookiesEnabled","details","index","join","id","dataLayer","getOrCreateDataLayer","wrappedGtag","gtagFunctionName","_args","arguments","wrapOrCreateGtag","logEvent","analyticsInstance","eventName","eventParams","getModularInstance","gtagFunction","global","send_to","logEvent$1","analyticsOptions","analytics","reason","initializeApp","authDomain","storageBucket","messagingSenderId","auth","getAuth","storage","getStorage","getFirestore","getApp","analyticsProvider","isInitialized","existingInstance","deepEqual","getOptions","initialize","initializeAnalytics","getAnalytics","articleService","getPublishedArticles","query","collection","where","orderBy","getDocs","docs","doc","getAllArticles","getArticle","docRef","docSnap","getDoc","exists","article","addDoc","date","updateArticle","updateDoc","deleteArticle","deleteDoc","uploadImage","file","path","storageRef","uploadBytes","getDownloadURL","deleteImage","deleteObject","generateSlug","title","toLowerCase","categoryService","getCategories","category","createdAt","updatedAt","updateCategory","deleteCategory","articlesRef","empty","Error","generateColor","colors","floor","random","getColorClass","color","colorMap","blue","bg","text","border","green","red","yellow","purple","pink","indigo","teal","CategoryManager","categories","setCategories","useState","loading","setLoading","setError","editingCategory","setEditingCategory","formData","setFormData","description","showForm","setShowForm","useEffect","loadCategories","resetForm","className","children","jsxRuntimeExports","onClick","viewBox","fill","fillRule","clipRule","onSubmit","preventDefault","categoryData","slug","createCategory","htmlFor","required","onChange","target","rows","parentId","filter","cat","colorClass","handleEdit","confirm","handleDelete","commentService","getComments","articleId","commentsRef","constraints","toDate","comment","likes","serverTimestamp","updateComment","deleteComment","repliesRef","snapshot","batch","writeBatch","commentRef","commit","moderateComment","likeComment","firestoreIncrement","getPendingComments","formatRelativeDate","diff","getTime","seconds","minutes","hours","days","toLocaleDateString","year","month","day","CommentModeration","comments","setComments","loadPendingComments","pendingComments","commentsWithArticles","articleTitle","handleModerate","commentId","author","email","content","stroke","strokeLinecap","strokeLinejoin","strokeWidth","round","v","lim","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","hex","h1","h2","eq","hexString","r","isShort","alpha","HUE_RE","hsl2rgbn","s","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","nk","parseInt","unpack","transparent","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","ret","len","_rgb","_valid","valid","obj","rgbString","hslString","mix","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","slice","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","fraction","isNumber","isNaN","toRadians","degrees","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","stub","_chartjs","splice","_arrayUnique","items","Set","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","intlCache","formatNumber","num","locale","cacheKey","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","name2","enumerable","local","appliers","defaults","_scriptable","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","dash","dashOffset","width","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","add","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","removeEventListener","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","splitByStyles","segments","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","numSteps","initial","currentStep","_refresh","_update","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","res","rej","resolved","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","__publicField","BarController","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","animationsDisabled","pointCount","_getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","_scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","abstract","DateAdapterBase","members","init","formats","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart$1","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","Chart","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","_setMinAndMaxByKey","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","week","quarter","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Bar","Pie","statsService","recordView","statsRef","dailyStatsRef","getToday","views","uniqueVisitors","isUnique","device","referrer","recordEngagement","setDoc","engagement","scrollDepth","timeOnPage","recordShare","getArticleStats","getDailyStats","startDate","getDateBefore","getMostViewedArticles","firestoreLimit","getMostEngagingArticles","getStats","endDate","maxResults","updateStats","stats","shares","Timestamp","fromDate","toISOString","setDate","getDate","toFixed","formatReadTime","StatsDashboard","selectedPeriod","setSelectedPeriod","topArticles","setTopArticles","dailyStats","setDailyStats","loadStats","mostViewed","articlesWithTitles","viewsData","stat","deviceData","deviceStats","mobile","desktop","tablet","sharesData","facebook","twitter","linkedin","ChartJS"],"mappings":"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","x_google_ignoreList":[0,1,2,3,10,11,12,13]}